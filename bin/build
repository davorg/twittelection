#!/usr/bin/perl

use strict;
use warnings;
use 5.010;
use lib 'lib';

use FindBin '$Bin';
use Template;

use TwittElection::Schema;

my $sch = TwittElection::Schema->get_schema;

my $tt = Template->new({
  ABSOLUTE     => 1,
  INCLUDE_PATH => "$Bin/../ttlib",
  OUTPUT_PATH  => "$Bin/../",
  ENCODING     => 'utf8',
});

foreach my $c ($sch->resultset('Constituency')->all) {
#  next unless $c->candidates->count;
  $tt->process('constituency.tt', { c => $c }, 'c/' . $c->slug_name . '.html',
               {binmode => ':utf8'})
    or die $tt->error;
}

$tt->process('constituencies.tt', { constits => [ $sch->resultset('Constituency')->all ] },
             'c/index.html', {binmode => ':utf8'})
    or die $tt->error;

#foreach my $p ($sch->resultset('Party')->all) {
#  next unless $p->candidates->count;
#  $tt->process('party.tt', { p => $p }, 'p/' . $p->slugname . '.html',
#               {binmode => ':utf8'})
#    or die $tt->error;
#}
#
#$tt->process('parties.tt', { parties => [ $sch->resultset('Party')->all ] },
#             'p/index.html', {binmode => ':utf8'})
#    or die $tt->error;

my $cand_rs  = $sch->resultset('Candidate');
my $party_rs = $sch->resultset('Party');
my @party;
foreach ($party_rs->all) {
  push @party, {
    name    => $_->name,
    count   => $_->candidates->count,
    twit    => $_->candidates->filter_tweeting->count,
    no_twit => $_->candidates->filter_nontweeting->count,
  };
}

@party = sort { $b->{count} <=> $a->{count} } @party;

$tt->process('stats/index.tt', {
  num_cands         => $cand_rs->count,
  num_twit_cands    => $cand_rs->filter_tweeting->count,
  num_no_twit_cands => $cand_rs->filter_nontweeting->count,
  party             => \@party,
}, 'stats/index.html', { binmode => ':utf8' })
  or die $tt->error;;

for (qw[index about/index]) {
  $tt->process("$_.tt", { }, "$_.html", { binmode => ':utf8' });
}
